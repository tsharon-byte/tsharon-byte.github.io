{"version":3,"sources":["index.js"],"names":["GameField","onClick","this","props","value","id","text","React","PureComponent","Board","className","buttonsList","App","buttons","i","state","currentPlayer","gameFinished","handleClick","bind","event","alert","target","slice","currentIx","mas","includes","a","b","c","checkGameFinished","setState","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.517885dc.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass GameField extends React.PureComponent {\n    render() {\n        return (<button onClick={this.props.onClick} value={this.props.id}>{this.props.text}</button>);\n    }\n}\n\nclass Board extends React.PureComponent {\n    render() {\n        return (\n            <div className=\"board\">\n                <table>\n                    <tbody>\n                    <tr>\n                        <td><GameField text={this.props.buttonsList[0]} id={0} onClick={this.props.onClick}/></td>\n                        <td><GameField text={this.props.buttonsList[1]} id={1} onClick={this.props.onClick}/></td>\n                        <td><GameField text={this.props.buttonsList[2]} id={2} onClick={this.props.onClick}/></td>\n                    </tr>\n                    <tr>\n                        <td><GameField text={this.props.buttonsList[3]} id={3} onClick={this.props.onClick}/></td>\n                        <td><GameField text={this.props.buttonsList[4]} id={4} onClick={this.props.onClick}/></td>\n                        <td><GameField text={this.props.buttonsList[5]} id={5} onClick={this.props.onClick}/></td>\n                    </tr>\n                    <tr>\n                        <td><GameField text={this.props.buttonsList[6]} id={6} onClick={this.props.onClick}/></td>\n                        <td><GameField text={this.props.buttonsList[7]} id={7} onClick={this.props.onClick}/></td>\n                        <td><GameField text={this.props.buttonsList[8]} id={8} onClick={this.props.onClick}/></td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nfunction checkGameFinished(currentIx, buttonsList) {\n    let winner = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let mas of winner) {\n        if (mas.includes(+currentIx)) {\n            let [a, b, c] = mas;\n            if (buttonsList[a] === buttonsList[b] && buttonsList[b] === buttonsList[c])\n                return true;\n        }\n    }\n    return false\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let buttons = [];\n        for (let i = 0; i < 9; i++) {\n            buttons[i] = null;\n        }\n        this.state = {\n            currentPlayer: \"X\",\n            buttonsList: buttons,\n            gameFinished: false\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(event) {\n        let currentPlayer = (this.state.currentPlayer === \"X\" ? \"O\" : \"X\");\n        if (this.state.gameFinished) {\n            alert(\"Игра окончена.  Победитель: \" + currentPlayer);\n            return;\n        }\n        if (this.state.buttonsList[event.target.value] != null) {\n            return;\n        }\n        let buttons = this.state.buttonsList.slice();\n        buttons[event.target.value] = this.state.currentPlayer;\n        let gameFinished = checkGameFinished(event.target.value, buttons);\n        this.setState({\n            currentPlayer: currentPlayer,\n            buttonsList: buttons,\n            gameFinished: gameFinished\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Крестики-нолики</h1>\n                <Board buttonsList={this.state.buttonsList} onClick={this.handleClick}/>\n                <label>\n                    {this.state.gameFinished ? (\"Игра окончена.  Победитель: \" + (this.state.currentPlayer === \"X\" ? \"O\" : \"X\")) : (\"Ваш шаг, игрок \" + this.state.currentPlayer)}\n                </label>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}